{
  "_args": [
    [
      "ammo@https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
      "/home/thiago/Documentos/Dev/Courses/nodejs/13-api-structure/node_modules/hapi"
    ]
  ],
  "_from": "ammo@https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
  "_id": "ammo@3.0.3",
  "_inCache": true,
  "_location": "/hapi/ammo",
  "_phantomChildren": {},
  "_requested": {
    "name": "ammo",
    "raw": "ammo@https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
    "rawSpec": "https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hapi"
  ],
  "_resolved": "https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
  "_shasum": "502aafa9d8bfca264143e226e5f322716e746b0c",
  "_shrinkwrap": null,
  "_spec": "ammo@https://registry.npmjs.org/ammo/-/ammo-3.0.3.tgz",
  "_where": "/home/thiago/Documentos/Dev/Courses/nodejs/13-api-structure/node_modules/hapi",
  "bugs": {
    "url": "https://github.com/hapijs/ammo/issues"
  },
  "dependencies": {
    "hoek": "6.x.x"
  },
  "description": "HTTP Range processing utilities",
  "devDependencies": {
    "code": "5.x.x",
    "lab": "17.x.x",
    "wreck": "14.x.x"
  },
  "homepage": "https://github.com/hapijs/ammo#readme",
  "keywords": [
    "http",
    "range",
    "utilities"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "name": "ammo",
  "optionalDependencies": {},
  "readme": "# ammo\r\n\r\nHTTP Range processing utilities.\r\n\r\n[![Npm Version](https://img.shields.io/npm/v/ammo.svg)](https://npmjs.com/package/ammo)\r\n[![Build Status](https://secure.travis-ci.org/hapijs/ammo.png)](http://travis-ci.org/hapijs/ammo)\r\n\r\nLead Maintainer - [Gil Pedersen](https://github.com/kanongil)\r\n\r\n## Usage\r\n\r\n```js\r\n// basic usage\r\nconst range = Ammo.header('bytes=1-5', 10);\r\n// range --> [{ from: 1, to: 5 }]\r\n\r\n// multiple ranges\r\nconst range = Ammo.header('bytes=1-5,7-10', 10);\r\n// range --> [{ from: 1, to: 5 }, { from: 7, to: 9 }]\r\n\r\n// streams (get range within a `source`)\r\nconst range = Ammo.header('bytes=1000-4000', 5000);\r\nconst stream = new Ammo.Stream(range[0]);\r\nconst buffer = async Wreck.read(source.pipe(stream));\r\n\r\n// buffer is the portion of source within range\r\n```\r\n\r\n## API\r\n\r\n### `header(header, length)`\r\n\r\nParses the range from a HTTP header.\r\n\r\n* `header` - A string in the form of `bytes=from-to`, where `from` and `to` are\r\nintegers specifying the range. Both are optional. Multiple ranges can be passed\r\nas a comma delimited list.\r\n* `length` - A positive integer specifying the maximum length the range can\r\ncover. If a `to` value passed in the `header` string is greater than `length`,\r\nthe `to` value is set as `length - 1`.\r\n\r\nReturns an array of objects with the properties `from` and `to`, which specify\r\nthe beginning and ending of the range. Overlapping ranges are combined into one\r\nobject. Returns `null` for invalid input.\r\n\r\n### `new Ammo.Stream(range)`\r\n\r\nCreates a [`Transform Stream`](https://nodejs.org/api/stream.html) that extracts\r\nthe portion of a piped in stream within `range`.\r\n* `range` - an object with the properties `from` and `to` that specify the range\r\nof the piped in stream to read. Objects returned by `Ammo.header` can be passed\r\ninto `range`.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/ammo.git"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "version": "3.0.3"
}
