{
  "_args": [
    [
      "b64@https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
      "/home/thiago/Documentos/Dev/Courses/nodejs/15-hapi-listar/node_modules/hapi"
    ]
  ],
  "_from": "b64@https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
  "_id": "b64@4.1.2",
  "_inCache": true,
  "_location": "/hapi/b64",
  "_phantomChildren": {},
  "_requested": {
    "name": "b64",
    "raw": "b64@https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
    "rawSpec": "https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hapi/iron",
    "/hapi/pez"
  ],
  "_resolved": "https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
  "_shasum": "7015372ba8101f7fb18da070717a93c28c8580d8",
  "_shrinkwrap": null,
  "_spec": "b64@https://registry.npmjs.org/b64/-/b64-4.1.2.tgz",
  "_where": "/home/thiago/Documentos/Dev/Courses/nodejs/15-hapi-listar/node_modules/hapi",
  "bugs": {
    "url": "https://github.com/hapijs/b64/issues"
  },
  "dependencies": {
    "hoek": "6.x.x"
  },
  "description": "Base64 streaming encoder and decoder",
  "devDependencies": {
    "code": "5.x.x",
    "lab": "17.x.x",
    "wreck": "14.x.x"
  },
  "homepage": "https://github.com/hapijs/b64#readme",
  "keywords": [
    "base64",
    "buffer",
    "decode",
    "encode",
    "stream"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "name": "b64",
  "optionalDependencies": {},
  "readme": "Base64 streaming encoder and decoder\n\n[![Build Status](https://secure.travis-ci.org/hapijs/b64.png)](http://travis-ci.org/hapijs/b64)\n\nLead Maintainer - [Wyatt Preul](https://github.com/geek)\n\n\n## Installation\n\n```sh\nnpm install b64 --save\n```\n\n\n## API\n\n### encode(buffer)\n\nBase64 encode the buffer and return it as a new Buffer.\n\n\n### decode(buffer)\n\nBase64 decode the buffer and return the result as a new buffer.\n\n\n### Encoder\n\nTransform stream that base64 encodes each chunk of the stream.\n\nExample:\n\n```js\n'use strict';\n\nconst Fs = require('fs');\nconst B64 = require('b64');\n\nconst stream = Fs.createReadStream(`${__dirname}/package.json`);\nconst encoder = new B64.Encoder();\n\nstream.pipe(encoder).pipe(process.stdout);\n```\n\n\n### Decoder\n\nTransform stream that base64 decodes each chunk of the stream.\n\nExample:\n\n```js\n'use strict';\n\nconst Fs = require('fs');\nconst B64 = require('b64');\n\nconst stream = Fs.createReadStream(`${__dirname}/encodedfile.b64`);\nconst decoder = new B64.Decoder();\n\nstream.pipe(decoder).pipe(process.stdout);\n```\n\n### base64urlEncode(value)\r\n\r\nEncodes value of string or buffer type in Base64 or URL encoding, function will assert input value is correct.\r\n\r\n### base64urlDecode(value)\r\n\r\nDecodes string into Base64 or URL encoding, function throws an error on invalid input and returns a string or buffer depending on encoding provided.  Default encoding is binary.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/b64.git"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "version": "4.1.2"
}
