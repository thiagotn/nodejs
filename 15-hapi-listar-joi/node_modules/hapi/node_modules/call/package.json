{
  "_args": [
    [
      "call@https://registry.npmjs.org/call/-/call-5.0.3.tgz",
      "/home/thiago/Documentos/Dev/Courses/nodejs/15-hapi-listar/node_modules/hapi"
    ]
  ],
  "_from": "call@https://registry.npmjs.org/call/-/call-5.0.3.tgz",
  "_id": "call@5.0.3",
  "_inCache": true,
  "_location": "/hapi/call",
  "_phantomChildren": {},
  "_requested": {
    "name": "call",
    "raw": "call@https://registry.npmjs.org/call/-/call-5.0.3.tgz",
    "rawSpec": "https://registry.npmjs.org/call/-/call-5.0.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/call/-/call-5.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hapi"
  ],
  "_resolved": "https://registry.npmjs.org/call/-/call-5.0.3.tgz",
  "_shasum": "5dc82c698141c2d45c51a9c3c7e0697f43ac46a2",
  "_shrinkwrap": null,
  "_spec": "call@https://registry.npmjs.org/call/-/call-5.0.3.tgz",
  "_where": "/home/thiago/Documentos/Dev/Courses/nodejs/15-hapi-listar/node_modules/hapi",
  "bugs": {
    "url": "https://github.com/hapijs/call/issues"
  },
  "dependencies": {
    "boom": "7.x.x",
    "hoek": "6.x.x"
  },
  "description": "HTTP Router",
  "devDependencies": {
    "code": "5.x.x",
    "lab": "17.x.x"
  },
  "homepage": "https://github.com/hapijs/call#readme",
  "keywords": [
    "HTTP",
    "router"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "name": "call",
  "optionalDependencies": {},
  "readme": "# call - Simple HTTP Router\r\n\r\n[![Build Status](https://secure.travis-ci.org/hapijs/call.png)](http://travis-ci.org/hapijs/call)\r\n\r\n### Lead Maintainer - [Eran Hammer](https://github.com/hueniverse)\r\n\r\n## Introduction\r\n`call` is a simple node.js HTTP Router. It is used by popular [hapi.js](https://github.com/hapijs/hapi) web framework. It implements predictable and easy to use routing. Even if it is designed to work with Hapi.js, you can still use it as an independent router in your app.\r\n\r\n## Example\r\n\r\n``` javascript\r\nconst Call = require('call');\r\n\r\n// Create new router\r\nconst router = new Call.Router();\r\n\r\n// Add route\r\nrouter.add({ method: 'get', path: '/' }, { label: 'root-path' });\r\n\r\n// Add another route\r\nrouter.add({ method: 'post', path: '/users' }, 'route specific data');\r\n\r\n// Add another route with dynamic path\r\nrouter.add({ method: 'put', path: '/users/{userId}' }, () => { /* ...handler... */ });\r\n\r\n// Match route\r\nrouter.route('post', '/users');\r\n/* If matching route is found, it returns an object containing\r\n    {\r\n        params: {},                     // All dynamic path parameters as key/value\r\n        paramsArray: [],                // All dynamic path parameter values in order\r\n        route: 'route specific data';   // routeData\r\n    }\r\n*/\r\n\r\n\r\n// Match route\r\nrouter.route('put', '/users/1234');\r\n/* returns\r\n    {\r\n        params: { userId: '1234' },\r\n        paramsArray: [ '1234' ],\r\n        route: [Function]\r\n    }\r\n*/\r\n```\r\n\r\n## API\r\nSee the detailed [API Reference](./API.md).",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/call.git"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "version": "5.0.3"
}
