{
  "_args": [
    [
      "catbox-memory@https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
      "/home/thiago/Documentos/Dev/Courses/nodejs/17-hapi-atualizar-joi/node_modules/hapi"
    ]
  ],
  "_from": "catbox-memory@https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
  "_id": "catbox-memory@4.0.1",
  "_inCache": true,
  "_location": "/hapi/catbox-memory",
  "_phantomChildren": {},
  "_requested": {
    "name": "catbox-memory",
    "raw": "catbox-memory@https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hapi"
  ],
  "_resolved": "https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
  "_shasum": "3371ae0dd91bbf5d9dd88dcab5332470354cbd1f",
  "_shrinkwrap": null,
  "_spec": "catbox-memory@https://registry.npmjs.org/catbox-memory/-/catbox-memory-4.0.1.tgz",
  "_where": "/home/thiago/Documentos/Dev/Courses/nodejs/17-hapi-atualizar-joi/node_modules/hapi",
  "bugs": {
    "url": "https://github.com/hapijs/catbox-memory/issues"
  },
  "dependencies": {
    "boom": "7.x.x",
    "hoek": "6.x.x"
  },
  "description": "Memory adapter for catbox",
  "devDependencies": {
    "catbox": "10.x.x",
    "code": "5.x.x",
    "lab": "17.x.x"
  },
  "homepage": "https://github.com/hapijs/catbox-memory#readme",
  "keywords": [
    "cache",
    "catbox",
    "memory"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "name": "catbox-memory",
  "optionalDependencies": {},
  "readme": "catbox-memory\r\n=============\r\n\r\nMemory adapter for [catbox](https://github.com/hapijs/catbox).\r\nThis adapter is not designed to share a common cache between multiple processes (e.g. in a cluster\r\nmode). It uses a single interval timeout to look for expired records and clean them from memory.\r\n\r\nLead Maintainer - [Wyatt Preul](https://github.com/geek)\r\n\r\nCurrent version: [![Current Version](https://img.shields.io/npm/v/catbox-memory.svg)](https://www.npmjs.org/package/catbox-memory) [![Build Status](https://api.travis-ci.org/hapijs/catbox-memory.svg)](https://travis-ci.org/hapijs/catbox-memory)\r\n\r\n### Options\r\n\r\n- `maxByteSize` - sets an upper limit on the number of bytes that can be stored in the\r\n  cache. Once this limit is reached no additional items will be added to the cache\r\n  until some expire. The utilized memory calculation is a rough approximation and must\r\n  not be relied on. Defaults to `104857600` (100MB).\r\n- `minCleanupIntervalMsec` - the minimum number of milliseconds in between each cache cleanup.\r\n  Defaults to 1 second (`1000`).\r\n- `allowMixedContent` - by default, all data is cached as JSON strings, and converted\r\n  to an object using `JSON.parse()` on retrieval. By setting this option to `true`,\r\n  `Buffer` data can be stored alongside the stringified data. `Buffer`s are not\r\n  stringified, and are copied before storage to prevent the value from changing while\r\n  in the cache. Defaults to `false`.\r\n- `cloneBuffersOnGet` - by default, buffers stored in the cache with `allowMixedContent`\r\n  set to `true` are copied when they are set but not when they are retrieved. This means\r\n  a change to the buffer returned by a `get()` will change the value in the cache. To prevent\r\n  this, set `cloneBuffersOnGet` to  `true` to always return a copy of the cached buffer. Defaults\r\n  to `false`.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/catbox-memory.git"
  },
  "scripts": {
    "test": "lab -a code -L -t 100",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "version": "4.0.1"
}
